# API ACCESS:
# API key for Spoonacular requests can be generated after sign up at
# https://spoonacular.com/food-api/console, then just replace api_key value with personal API key

# ASSIGNMENT DESCRIPTION:
# Create a program that retrieves multiple recipes based on user-provided pantry ingredients and saves
# only the names and quantities of missing ingredients to a file in a neat and readable format.
# The program asks the user for their name, the number of recipes they want to generate, and the ingredients
# they have available. It then fetches the recipes from the Spoonacular API and displays the recipe titles,
# missed ingredients (to buy), used ingredients (from the user's pantry) in a user-friendly format with delays
# for readability. The program writes the missing ingredients to a file named "shopping_list.txt" and includes
# pleasant messages to guide users through the process, as well as an optional wine pairing feature at the end.

# requests module imported to make HTTP requests to Spoonacular API
import requests
# time module to add delays for user readability
import time
# pprint for better readability
import pprint

# function takes recipe dictionary generated by Spoonacular API and extracts most relevant information
def extracted_recipe_info(recipe):
    title = recipe["title"]
    missed_ingredients = [
        {
            "name": ingredient["name"],
            "amount": ingredient["amount"],
            "unit": ingredient["unit"]
        }
        for ingredient in recipe["missedIngredients"]
    ]
    used_ingredients = [
        {
            "name": ingredient["name"],
            "amount": ingredient["amount"],
            "unit": ingredient["unit"]
        }
        for ingredient in recipe["usedIngredients"]
    ]
    return {
        "title": title,
        "missed_ingredients": missed_ingredients,
        "used_ingredients": used_ingredients
    }

# function takes extracted recipe information and prints it in a readable and user-friendly format
# prints the title, followed by ingredients to buy & pantry ingredients used
def print_recipe_info(recipe_info):
    print(f"Recipe name: {recipe_info['title']}")
    print("Ingredients to buy:")
    for ingredient in recipe_info['missed_ingredients']:
        print(f" * {ingredient['name'].capitalize()}: {ingredient['amount']} {ingredient['unit']}")
    print("Ingredients from pantry used:")
    for ingredient in recipe_info['used_ingredients']:
        print(f" * {ingredient['name'].capitalize()}: {ingredient['amount']} {ingredient['unit']}")
    print()

# function writes missing ingredients needed to buy to text file
def write_missed_ingredients_to_file(recipe_info, file):
    for ingredient in recipe_info['missed_ingredients']:
        file.write(f"{ingredient['name']}: {ingredient['amount']} {ingredient['unit']}\n")

# prompts user for their name for interactivity
name = input("Hi there! To start, what is your name? ").title()
# delays for increased user readability
time.sleep(1)
# asks user for number of recipes they would like and converts input to integer
no_of_recipes = int(input(f"Thanks {name}! How many recipes would you like to add? "))
time.sleep(1)
# asks user which ingredients they already have in pantry
pantry = input(f"Which ingredients would you like to cook with? (Please use commas inbetween ingredients) ").lower()
time.sleep(1)

# stores API key needed to access Spoonacular API
api_key = "cb8b54feb9a34245bd41ee252340cc3d"
# constructed API URL that fetches recipes per parameters: ingredients user entered, no of recipes needed, prioritises recipes that use up pantry ingredients
api_url = f"https://api.spoonacular.com/recipes/findByIngredients?ingredients={pantry}&number={no_of_recipes}&ranking=1&apiKey={api_key}"
# makes API request to get recipes based on user input
generated_recipes = requests.get(api_url)
# parses JSON response into a Python list
data = generated_recipes.json()

# thank you message for interactivity and personalibility
print(f"Thank you for the information {name}! Here are your generated recipes: \n")
time.sleep(2)

# opens or creates new .txt file in write mode
# iterates over each recipe generated by API
# uses previous functions to extract and print information
# writes missing ingredients to shopping list file
with open("shopping_list.txt", "w") as text_file:
    for recipe in data:
        time.sleep(2)
        recipe_info = extracted_recipe_info(recipe)
        print_recipe_info(recipe_info)
        write_missed_ingredients_to_file(recipe_info, text_file)

print("Your shopping list has been generated as shopping_list.txt! ")
time.sleep(2)

# optional wine pairing bonus using for loop and boolean
wine_pairing = input("BONUS! Would you like to find a wine pairing for your meal? Y/N \n").lower()
if wine_pairing == "y":
    wine_food = input("Perfect! What is the main component of your meal? E.g. chicken, steak etc.: ").lower()
    wine_url = f"https://api.spoonacular.com/food/wine/pairing?food={wine_food}&apiKey={api_key}"
    generated_wines = requests.get(wine_url)
    wine_data = generated_wines.json()
    pprint.pp(wine_data)
else:
    print(f"No problem {name}! Enjoy your meal.")